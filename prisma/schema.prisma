generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Usuarios {
  cpf                       String                   @id @unique @db.VarChar(11)
  email                     String                   @unique
  telefone                  String                   @unique
  nome                      String
  senha                     String
  dataAniversario           DateTime
  generoUsuario             GeneroUsuario
  nivelPrivilegio           RegraPriviegio           @default(USUARIO)
  criadoEm                  DateTime                 @default(now())
  atualizadoEm              DateTime?
  pontos                    Int                      @default(0)
  codigoRecuperacao         String?
  codigoRecuperacaoCriadoEm DateTime?
  transacoes                Transacoes[]
  cuponsCompradosUsuario    CuponsCompradosUsuario[]
}

model EmpresasParceiras {
  cnpj                      String                 @id @unique @db.VarChar(14)
  email                     String                 @unique
  telefone                  String                 @unique
  nomeFantasia              String
  razaoSocial               String
  senha                     String                 @db.LongText
  ramo                      String
  ativo                     Boolean                @default(true)
  tipoEmpresa               TipoEmpresa
  enderecolojaOnline        String?
  criadoEm                  DateTime               @default(now())
  atualizadoEm              DateTime?
  codigoRecuperacao         String?
  codigoRecuperacaoCriadoEm DateTime?
  logo                      String?                @db.LongText
  cupons                    CuponsDesconto[]
  endereco                  Enderecos?
  SolicitacoesEcoponto      SolicitacoesEcoponto[]
}

model Enderecos {
  id          BigInt            @id @default(autoincrement())
  rua         String
  numero      String
  complemento String
  bairro      String
  cidade      String
  uf          String            @db.VarChar(2)
  cep         String            @db.VarChar(8)
  lat         Float
  long        Float
  cnpjEmpresa String            @unique
  ecoponto    Ecopontos[]
  empresa     EmpresasParceiras @relation(fields: [cnpjEmpresa], references: [cnpj])

  @@index([cnpjEmpresa])
}

model CuponsDesconto {
  id                     BigInt                   @id @default(autoincrement())
  cnpjEmpresa            String
  nome                   String
  valor                  Int
  ativo                  Boolean                  @default(true)
  regras                 String                   @db.LongText
  criadoEm               DateTime                 @default(now())
  atualizadoEm           DateTime?
  quantidadeDisponiveis  Int
  transacoes             Transacoes[]
  empresa                EmpresasParceiras        @relation(fields: [cnpjEmpresa], references: [cnpj])
  cuponsCompradosUsuario CuponsCompradosUsuario[]

  @@index([cnpjEmpresa])
}

model Ecopontos {
  id                   String                 @id @unique
  nome                 String
  ativo                Boolean                @default(true)
  criadoEm             DateTime               @default(now())
  atualizadoEm         DateTime?
  enderecoId           BigInt
  tipo                 TipoEcoponto
  transacoes           Transacoes[]
  enderecos            Enderecos              @relation(fields: [enderecoId], references: [id])
  SolicitacoesEcoponto SolicitacoesEcoponto[]

  @@index([enderecoId])
}

model Materiais {
  id                   BigInt                     @id @default(autoincrement())
  nome                 String                     @unique
  valor                Int
  ativo                Boolean                    @default(true)
  criadoEm             DateTime                   @default(now())
  atualizadoEm         DateTime?
  ehAceitoTipoEcoponto TipoEcopontoAceitaMaterial
  logo                 String?                    @db.LongText
  materiaisDepositados MateriaisDepositados[]
}

model MateriaisDepositados {
  transacaoId BigInt
  materialId  BigInt
  quantidade  Int
  valorTotal  Int
  material    Materiais  @relation(fields: [materialId], references: [id])
  transacoes  Transacoes @relation(fields: [transacaoId], references: [id])

  @@id([transacaoId, materialId])
  @@index([materialId])
  @@index([transacaoId])
}

model Transacoes {
  id                   BigInt                 @id @default(autoincrement())
  usuarioCPF           String
  tipo                 TipoTransacao
  valorTotal           Int
  cupomId              BigInt?
  ecopontoId           String?
  criadoEm             DateTime               @default(now())
  status               StatusTransacao
  finalizadoEm         DateTime?
  materiaisDepositados MateriaisDepositados[]
  cupom                CuponsDesconto?        @relation(fields: [cupomId], references: [id])
  ecoponto             Ecopontos?             @relation(fields: [ecopontoId], references: [id])
  usuario              Usuarios               @relation(fields: [usuarioCPF], references: [cpf])

  @@index([cupomId])
  @@index([usuarioCPF])
  @@index([ecopontoId])
}

model CuponsCompradosUsuario {
  id          BigInt         @id @default(autoincrement())
  usuarioCPF  String
  cupomId     BigInt
  criadoEm    DateTime       @default(now())
  expiraEm    DateTime
  utilizadoEm DateTime?
  usuario     Usuarios       @relation(fields: [usuarioCPF], references: [cpf])
  cupom       CuponsDesconto @relation(fields: [cupomId], references: [id])

  @@index([cupomId])
  @@index([usuarioCPF])
}

model SolicitacoesEcoponto {
  id           BigInt                  @id @default(autoincrement())
  acao         TipoSolicitacaoEcoponto
  cnpjEmpresa  String
  tipoEcoponto TipoEcoponto?
  ecopontoId   String?
  criadoEm     DateTime                @default(now())
  atendidoEm   DateTime?
  agendadoPara DateTime?
  ecoponto     Ecopontos?              @relation(fields: [ecopontoId], references: [id])
  empresa      EmpresasParceiras       @relation(fields: [cnpjEmpresa], references: [cnpj])

  @@index([cnpjEmpresa])
  @@index([ecopontoId])
}

model Log {
  id          BigInt   @id @default(autoincrement())
  realizadoEm DateTime @default(now())
  acao        String   @db.LongText
}

enum RegraPriviegio {
  USUARIO
  ADMINSTRADOR
}

enum GeneroUsuario {
  HOMEM_CIS
  HOMEM_TRANS
  MULHER_CIS
  MULHER_TRANS
  NAO_BINARIO
}

enum TipoEmpresa {
  FISICA
  ONLINE
  AMBOS
}

enum TipoEcoponto {
  TOTEM
  BOX
}

enum TipoEcopontoAceitaMaterial {
  TOTEM
  BOX
  TODOS
}

enum TipoTransacao {
  CREDITO
  DEBITO
}

enum StatusTransacao {
  PENDENTE
  EFETIVADO
  REJEITADO
}

enum TipoSolicitacaoEcoponto {
  ADICIONAR
  DEVOLUCAO
  COLETAR
}
